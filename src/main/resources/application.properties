spring.application.name=api-user
spring.security.user.name=user
spring.security.user.password=admin123
server.servlet.context-path=/${spring.application.name}
#H2 properties
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.defer-datasource-initialization=true
spring.h2.console.enabled=true

#JWT 
api.jwt.secret=sdjf2349dsfowEw3nogir2ejrtjerlktj3Kesfsdet23gfdlkj35ygjl34534gdj56j45334gglk
api.jwt.expiration-seconds=300


#Mensajes de validacion
api.enum.msg={ CREDENCIALES_INVALIDAS: "Credenciales inválidas", USUARIO_INACTIVO: "Usuario inactivo", AUTHORIZATION_INVALIDO: "Authorization invalido", TOKEN_EXPIRADO: "Token expirado", TOKEN_NO_VALIDO: "El token no es válido", TOKEN_NO_PERTENECE: "El token no pertenece al usuario."}
api.db.msg={ USUARIO_EXISTENTE: "No se puede crear el usuario. Intente con otro nombre", EMAIL_EXISTENTE: "El correo ya registrado.", EMAIL_EXISTE_OTRO_USER: "El correo ya registrado para otro usuario."}
